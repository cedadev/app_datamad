"""
Django settings for datamadsite project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
from datamadsite.settings_local import *
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'orgtheme_datamad',
    'fwtheme_django_ceda_serv',
    'fwtheme_django',
    'jira_oauth',
    'cookielaw',
    'rest_framework',
    'crispy_forms',
    "crispy_bootstrap4",
    'datamad2',
    'datamad2_api',
    'haystack',
    'django_tables2',
    'bootstrap_datepicker_plus',
    'jfu',
    'django_unused_media',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'datamadsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media'
            ],

        },
    },
]

STORAGES = {
    "staticfiles": {
                    "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
                   },
}

WSGI_APPLICATION = 'datamadsite.wsgi.application'


# Databases
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'USER': 'django'},

    'DataBank': {
        'ENGINE': "django.db.backends.mysql",
        'OPTIONS': {"read_default_file": os.path.join(
            BASE_DIR,
            './local_temp/Databank.conf'),
            },
    },
}
"""



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'USER': 'django'},

    'DataBank': {
        'ENGINE': "django.db.backends.mysql",
        'OPTIONS': {"read_default_file": os.path.join(
            BASE_DIR, 'local_temp/Databank.conf'),
        }
    },
}
"""


    'DataBank': {
        'ENGINE': "django.db.backends.mysql",
        'OPTIONS': {"read_default_file": os.path.join(
            BASE_DIR, 'Databank.conf'),
            },

    'temp': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'USER': 'django'},

"""




"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'USER': 'django'},
}

    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'OPTIONS': {
            'service': "datamad-test-db",
            'passfile': '.pgpass',
        },
    },

    'DataBank': {
    'ENGINE': "django.db.backends.mysql",
    'OPTIONS': {"read_default_file": os.path.join(
            BASE_DIR,
            '/local_temp/Databank.conf'),
            #"driver": "ODBC Driver 17 for SQL Server"
            },
},
"""
    

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Etc/GMT-1'
USE_I18N = True
USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

#for testing emails
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAdminUser',
    ]
}

AUTH_USER_MODEL = 'datamad2.User'

"""
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack_elasticsearch.elasticsearch7.Elasticsearch7SearchEngine',
        'URL': '',
        'INDEX_NAME': '',
        'TIMEOUT': 5,
        'KWARGS': {
            'headers': {
                'x-api-key': ''
            },
            'retry_on_timeout': True,
            'sniffer_timeout': 60,
            'sniff_on_connection_fail': True,
        }
    }
}


HAYSTACK_FACET_LIMIT = 100
"""

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

from .settings_local import *
