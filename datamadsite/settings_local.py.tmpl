from django.contrib.messages import constants as message_constants
import os
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECRET_KEY = ''

# Redirect to home URL after login (Default redirects to /accounts/profile/)
LOGIN_REDIRECT_URL = '/'
# Redirect to login page after logging out
LOGOUT_REDIRECT_URL = '/accounts/login'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MESSAGE_LEVEL = message_constants.DEBUG

HAYSTACK_CONNECTIONS = {
 'default': {
     'ENGINE': 'haystack_elasticsearch.elasticsearch7.Elasticsearch7SearchEngine',
     'URL': '',
     'INDEX_NAME': '',
     'TIMEOUT': 5,
     'KWARGS': {
         'headers': {
             'x-api-key': ''
         },
         'retry_on_timeout': True,
         'sniffer_timeout': 60,
         'sniff_on_connection_fail': True,
     }
 }
}

HAYSTACK_FACET_LIMIT = 100

def read(file_path):
    """ Read a file and return it's contents. """
    with open(file_path) as f:
        return f.read()

JIRA_CONSUMER_KEY = 'OAuthKey'
JIRA_PRIVATE_RSA_KEY_PATH = ''
JIRA_PRIVATE_RSA_KEY = read(JIRA_PRIVATE_RSA_KEY_PATH)

# The URLs for the JIRA instance
JIRA_SERVER = ''
JIRA_REQUEST_TOKEN_URL = JIRA_SERVER + '/plugins/servlet/oauth/request-token'
JIRA_AUTHORIZE_URL = JIRA_SERVER + '/plugins/servlet/oauth/authorize'
JIRA_ACCESS_TOKEN_URL = JIRA_SERVER + '/plugins/servlet/oauth/access-token'
